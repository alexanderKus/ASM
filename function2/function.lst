     1                                  extern printf
     2                                  
     3                                  section .data
     4 00000000 41                      	first	db	"A"
     5 00000001 42                      	second 	db	"B"
     6 00000002 43                      	third	db	"C"
     7 00000003 44                      	fourth	db	"D"
     8 00000004 45                      	fiveth	db	"E"
     9 00000005 46                      	sixth	db	"F"
    10 00000006 47                      	seventh	db	"G"
    11 00000007 48                      	eighth	db	"H"
    12 00000008 49                      	nineth	db	"I"
    13 00000009 4A                      	tenth	db	"J"
    14 0000000A 537472696E673A2025-         fmt     db  "String: %s", 10, 0
    14 00000013 730A00             
    15                                  section .bss
    16 00000000 <res Bh>                    flist   resb    11  ; dlugosc string + koncowe 0
    17                                  section .text
    18                                  	global main
    19                                  main:
    20 00000000 55                      	push rbp
    21 00000001 4889E5                  	mov rbp, rsp
    22                                  
    23 00000004 48BF-                       mov rdi, flist          ; adres lancucha
    23 00000006 [0000000000000000] 
    24 0000000E 48BE-                       mov rsi, first          
    24 00000010 [0000000000000000] 
    25 00000018 48BA-                       mov rdx, second
    25 0000001A [0100000000000000] 
    26 00000022 48B9-                       mov rcx, third
    26 00000024 [0200000000000000] 
    27 0000002C 49B8-                       mov r8,  fourth
    27 0000002E [0300000000000000] 
    28 00000036 49B9-                       mov r9,  fiveth
    28 00000038 [0400000000000000] 
    29 00000040 68[09000000]                push     tenth
    30 00000045 68[08000000]                push     nineth
    31 0000004A 68[07000000]                push     eighth
    32 0000004F 68[06000000]                push     seventh
    33 00000054 68[05000000]                push     sixth
    34 00000059 E820000000                  call lfunc
    35                                      
    36 0000005E 48BF-                       mov rdi, fmt
    36 00000060 [0A00000000000000] 
    37 00000068 48BE-                       mov rsi, flist
    37 0000006A [0000000000000000] 
    38 00000072 B800000000                  mov rax, 0
    39 00000077 E8(00000000)                call printf
    40                                  
    41 0000007C C9                          leave
    42 0000007D C3                          ret
    43                                  ;------------------------
    44                                  lfunc:
    45 0000007E 55                          push rbp
    46 0000007F 4889E5                      mov rbp, rsp
    47 00000082 4831C0                      xor rax, rax
    48 00000085 8A06                        mov al, byte[rsi]   ; przenosimy zawartosc pierwszeg argumentu do al
    49 00000087 8807                        mov [rdi], al       ; zapisujemy al w pamieci
    50 00000089 8A02                        mov al, byte[rdx]   ; przenosimy zawartosc drugiego arugmentu do al
    51 0000008B 884701                      mov [rdi+1], al     ; zapisujemy al w pamieci
    52 0000008E 8A01                        mov al, byte[rcx]
    53 00000090 884702                      mov [rdi+2], al
    54 00000093 418A00                      mov al, byte[r8]
    55 00000096 884703                      mov [rdi+3], al
    56 00000099 418A01                      mov al, byte[r9]
    57 0000009C 884704                      mov [rdi+4], al
    58                                  ; pobieramy arguemntu ze stusu
    59 0000009F 53                          push rbx                ; zapisywany przez wywolanego
    60                                  
    61 000000A0 4831DB                      xor rbx, rbx
    62 000000A3 488B4510                    mov rax, qword[rbp+16]  ; pierwsza wartosc: poczatkowy stos + rip + rbp
    63 000000A7 8A18                        mov bl, byte[rax]
    64 000000A9 885F05                      mov [rdi+5], bl         ; zapisujemy znak w pamieci 
    65 000000AC 488B4518                    mov rax, qword[rbp+24]  ; kolejna wartosc
    66 000000B0 8A18                        mov bl, byte[rax]
    67 000000B2 885F06                      mov [rdi+6], bl
    68 000000B5 488B4520                    mov rax, qword[rbp+32]
    69 000000B9 8A18                        mov bl, byte[rax]
    70 000000BB 885F07                      mov [rdi+7], bl
    71 000000BE 488B4528                    mov rax, qword[rbp+40]
    72 000000C2 8A18                        mov bl, byte[rax]
    73 000000C4 885F08                      mov [rdi+8], bl
    74 000000C7 488B4530                    mov rax, qword[rbp+48]
    75 000000CB 8A18                        mov bl, byte[rax]
    76 000000CD 885F09                      mov [rdi+9], bl
    77 000000D0 B300                        mov bl, 0
    78 000000D2 885F0A                      mov [rdi+10], bl
    79                                  
    80 000000D5 5B                          pop rbx                ; zapisywany przez wywolanego
    81                                  
    82 000000D6 4889EC                      mov rsp, rbp
    83 000000D9 5D                          pop rbp
    84 000000DA C3                          ret
    85                                  
