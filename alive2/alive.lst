     1                                  extern printf
     2                                  section .data
     3 00000000 48656C6C6F2C20576F-     	msg1 	db "Hello, World", 0	
     3 00000009 726C6400           
     4 0000000D 416C69766520616E64-     	msg2 	db "Alive and feeling good", 0
     4 00000016 206665656C696E6720-
     4 0000001F 676F6F6400         
     5 00000024 6501000000000000        	radius  dq 357
     6 0000002C 1F85EB51B81E0940        	pi      dq 3.14
     7 00000034 25730A00                    fmtstr  db "%s", 10, 0
     8 00000038 25640A00                    fmtint  db "%d", 10, 0
     9 0000003C 256C660A00                  fmtflt  db "%lf", 10, 0
    10                                  section .bss
    11                                  section .text
    12                                  	global main
    13                                  main:
    14 00000000 55                      	push rbp		    ; prolog funkcji
    15 00000001 4889E5                  	mov rbp, rsp		; prolog funkcji
    16                                  ;print msg1
    17 00000004 B800000000                  mov rax, 0
    18 00000009 48BF-                       mov rdi, fmtstr,
    18 0000000B [3400000000000000] 
    19 00000013 48BE-                       mov rsi, msg1
    19 00000015 [0000000000000000] 
    20 0000001D E8(00000000)                call printf
    21                                  ;print msg2
    22 00000022 B800000000                  mov rax, 0
    23 00000027 48BF-                       mov rdi, fmtstr,
    23 00000029 [3400000000000000] 
    24 00000031 48BE-                       mov rsi, msg2
    24 00000033 [0D00000000000000] 
    25 0000003B E8(00000000)                call printf
    26                                  ;print radius
    27 00000040 B800000000                  mov rax, 0
    28 00000045 48BF-                       mov rdi, fmtint,
    28 00000047 [3800000000000000] 
    29 0000004F 488B3425[24000000]          mov rsi, [radius]   ; wez wartosc, a nie adres
    30 00000057 E8(00000000)                call printf
    31                                  ;print pi
    32 0000005C B801000000                  mov rax, 1          ; 1, uzywamy rejestru xmm
    33 00000061 F30F7E0425-                 movq xmm0, [pi]     ; wez wartosc, a nie adres
    33 00000066 [2C000000]         
    34 0000006A 48BF-                       mov rdi, fmtflt 
    34 0000006C [3C00000000000000] 
    35 00000074 E8(00000000)                call printf
    36                                  
    37 00000079 4889EC                  	mov rsp, rbp    	; epilog funkcji
    38 0000007C 5D                      	pop rbp		        ; epilog funkcji
    39                                  
    40 0000007D C3                          ret
